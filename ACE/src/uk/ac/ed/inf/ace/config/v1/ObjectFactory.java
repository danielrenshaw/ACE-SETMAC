//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.09.22 at 11:20:52 AM BST 
//


package uk.ac.ed.inf.ace.config.v1;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the uk.ac.ed.inf.ace.config.v1 package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _WekaClassifier_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "wekaClassifier");
    private final static QName _BinaryTaskBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "binaryTaskBase");
    private final static QName _MultiClassIntegerTask_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "multiClassIntegerTask");
    private final static QName _Processor_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "processor");
    private final static QName _Tokenizer_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "tokenizer");
    private final static QName _DocTypeBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "docTypeBase");
    private final static QName _MultiClassTask_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "multiClassTask");
    private final static QName _Classifier_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "classifier");
    private final static QName _Task_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "task");
    private final static QName _RemoveStopwords_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "removeStopwords");
    private final static QName _DataSetBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "dataSetBase");
    private final static QName _SqliteDatabase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "sqliteDatabase");
    private final static QName _DocType_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "docType");
    private final static QName _BinaryIntegerTask_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "binaryIntegerTask");
    private final static QName _DatabaseBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "databaseBase");
    private final static QName _TaskBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "taskBase");
    private final static QName _MultiClassTaskBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "multiClassTaskBase");
    private final static QName _Database_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "database");
    private final static QName _ClassifierBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "classifierBase");
    private final static QName _DataSet_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "dataSet");
    private final static QName _BinaryTask_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "binaryTask");
    private final static QName _ProcessorBase_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "processorBase");
    private final static QName _FilterByLabel_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "filterByLabel");
    private final static QName _ProgrammePreCacheProcessorsProcessorRef_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "processorRef");
    private final static QName _ProgrammeDataSetsDataSetRef_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "dataSetRef");
    private final static QName _ProgrammeTasksTaskRef_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "taskRef");
    private final static QName _ProgrammeDocTypesDocTypeRef_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "docTypeRef");
    private final static QName _ProgrammeClassifiersClassifierRef_QNAME = new QName("urn://uk/ac/ed/inf/ace/config/v1", "classifierRef");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: uk.ac.ed.inf.ace.config.v1
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FilterByLabel }
     * 
     */
    public FilterByLabel createFilterByLabel() {
        return new FilterByLabel();
    }

    /**
     * Create an instance of {@link Programme }
     * 
     */
    public Programme createProgramme() {
        return new Programme();
    }

    /**
     * Create an instance of {@link DocType }
     * 
     */
    public DocType createDocType() {
        return new DocType();
    }

    /**
     * Create an instance of {@link BinaryIntegerTask }
     * 
     */
    public BinaryIntegerTask createBinaryIntegerTask() {
        return new BinaryIntegerTask();
    }

    /**
     * Create an instance of {@link Programmes }
     * 
     */
    public Programmes createProgrammes() {
        return new Programmes();
    }

    /**
     * Create an instance of {@link RemoveStopwords }
     * 
     */
    public RemoveStopwords createRemoveStopwords() {
        return new RemoveStopwords();
    }

    /**
     * Create an instance of {@link uk.ac.ed.inf.ace.config.v1.PostCacheProcessors }
     * 
     */
    public uk.ac.ed.inf.ace.config.v1.PostCacheProcessors createPostCacheProcessors() {
        return new uk.ac.ed.inf.ace.config.v1.PostCacheProcessors();
    }

    /**
     * Create an instance of {@link DataSet }
     * 
     */
    public DataSet createDataSet() {
        return new DataSet();
    }

    /**
     * Create an instance of {@link uk.ac.ed.inf.ace.config.v1.DocTypes }
     * 
     */
    public uk.ac.ed.inf.ace.config.v1.DocTypes createDocTypes() {
        return new uk.ac.ed.inf.ace.config.v1.DocTypes();
    }

    /**
     * Create an instance of {@link Tokenizer }
     * 
     */
    public Tokenizer createTokenizer() {
        return new Tokenizer();
    }

    /**
     * Create an instance of {@link Processor }
     * 
     */
    public Processor createProcessor() {
        return new Processor();
    }

    /**
     * Create an instance of {@link uk.ac.ed.inf.ace.config.v1.Classifiers }
     * 
     */
    public uk.ac.ed.inf.ace.config.v1.Classifiers createClassifiers() {
        return new uk.ac.ed.inf.ace.config.v1.Classifiers();
    }

    /**
     * Create an instance of {@link SqliteDatabase }
     * 
     */
    public SqliteDatabase createSqliteDatabase() {
        return new SqliteDatabase();
    }

    /**
     * Create an instance of {@link Engine }
     * 
     */
    public Engine createEngine() {
        return new Engine();
    }

    /**
     * Create an instance of {@link Databases }
     * 
     */
    public Databases createDatabases() {
        return new Databases();
    }

    /**
     * Create an instance of {@link Environments }
     * 
     */
    public Environments createEnvironments() {
        return new Environments();
    }

    /**
     * Create an instance of {@link Environment }
     * 
     */
    public Environment createEnvironment() {
        return new Environment();
    }

    /**
     * Create an instance of {@link uk.ac.ed.inf.ace.config.v1.DataSets }
     * 
     */
    public uk.ac.ed.inf.ace.config.v1.DataSets createDataSets() {
        return new uk.ac.ed.inf.ace.config.v1.DataSets();
    }

    /**
     * Create an instance of {@link uk.ac.ed.inf.ace.config.v1.Tasks }
     * 
     */
    public uk.ac.ed.inf.ace.config.v1.Tasks createTasks() {
        return new uk.ac.ed.inf.ace.config.v1.Tasks();
    }

    /**
     * Create an instance of {@link uk.ac.ed.inf.ace.config.v1.PreCacheProcessors }
     * 
     */
    public uk.ac.ed.inf.ace.config.v1.PreCacheProcessors createPreCacheProcessors() {
        return new uk.ac.ed.inf.ace.config.v1.PreCacheProcessors();
    }

    /**
     * Create an instance of {@link Task }
     * 
     */
    public Task createTask() {
        return new Task();
    }

    /**
     * Create an instance of {@link BinaryTask }
     * 
     */
    public BinaryTask createBinaryTask() {
        return new BinaryTask();
    }

    /**
     * Create an instance of {@link Database }
     * 
     */
    public Database createDatabase() {
        return new Database();
    }

    /**
     * Create an instance of {@link WekaClassifier }
     * 
     */
    public WekaClassifier createWekaClassifier() {
        return new WekaClassifier();
    }

    /**
     * Create an instance of {@link Classifier }
     * 
     */
    public Classifier createClassifier() {
        return new Classifier();
    }

    /**
     * Create an instance of {@link MultiClassTask }
     * 
     */
    public MultiClassTask createMultiClassTask() {
        return new MultiClassTask();
    }

    /**
     * Create an instance of {@link MultiClassIntegerTask }
     * 
     */
    public MultiClassIntegerTask createMultiClassIntegerTask() {
        return new MultiClassIntegerTask();
    }

    /**
     * Create an instance of {@link Reference }
     * 
     */
    public Reference createReference() {
        return new Reference();
    }

    /**
     * Create an instance of {@link FilterByLabel.Rule }
     * 
     */
    public FilterByLabel.Rule createFilterByLabelRule() {
        return new FilterByLabel.Rule();
    }

    /**
     * Create an instance of {@link Programme.DataSets }
     * 
     */
    public Programme.DataSets createProgrammeDataSets() {
        return new Programme.DataSets();
    }

    /**
     * Create an instance of {@link Programme.DocTypes }
     * 
     */
    public Programme.DocTypes createProgrammeDocTypes() {
        return new Programme.DocTypes();
    }

    /**
     * Create an instance of {@link Programme.Classifiers }
     * 
     */
    public Programme.Classifiers createProgrammeClassifiers() {
        return new Programme.Classifiers();
    }

    /**
     * Create an instance of {@link Programme.Tasks }
     * 
     */
    public Programme.Tasks createProgrammeTasks() {
        return new Programme.Tasks();
    }

    /**
     * Create an instance of {@link Programme.PreCacheProcessors }
     * 
     */
    public Programme.PreCacheProcessors createProgrammePreCacheProcessors() {
        return new Programme.PreCacheProcessors();
    }

    /**
     * Create an instance of {@link Programme.PostCacheProcessors }
     * 
     */
    public Programme.PostCacheProcessors createProgrammePostCacheProcessors() {
        return new Programme.PostCacheProcessors();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link WekaClassifier }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "wekaClassifier", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "classifierBase")
    public JAXBElement<WekaClassifier> createWekaClassifier(WekaClassifier value) {
        return new JAXBElement<WekaClassifier>(_WekaClassifier_QNAME, WekaClassifier.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BinaryTaskBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "binaryTaskBase")
    public JAXBElement<BinaryTaskBase> createBinaryTaskBase(BinaryTaskBase value) {
        return new JAXBElement<BinaryTaskBase>(_BinaryTaskBase_QNAME, BinaryTaskBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MultiClassIntegerTask }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "multiClassIntegerTask", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "taskBase")
    public JAXBElement<MultiClassIntegerTask> createMultiClassIntegerTask(MultiClassIntegerTask value) {
        return new JAXBElement<MultiClassIntegerTask>(_MultiClassIntegerTask_QNAME, MultiClassIntegerTask.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Processor }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "processor", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "processorBase")
    public JAXBElement<Processor> createProcessor(Processor value) {
        return new JAXBElement<Processor>(_Processor_QNAME, Processor.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Tokenizer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "tokenizer", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "processorBase")
    public JAXBElement<Tokenizer> createTokenizer(Tokenizer value) {
        return new JAXBElement<Tokenizer>(_Tokenizer_QNAME, Tokenizer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocTypeBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "docTypeBase")
    public JAXBElement<DocTypeBase> createDocTypeBase(DocTypeBase value) {
        return new JAXBElement<DocTypeBase>(_DocTypeBase_QNAME, DocTypeBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MultiClassTask }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "multiClassTask", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "taskBase")
    public JAXBElement<MultiClassTask> createMultiClassTask(MultiClassTask value) {
        return new JAXBElement<MultiClassTask>(_MultiClassTask_QNAME, MultiClassTask.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Classifier }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "classifier", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "classifierBase")
    public JAXBElement<Classifier> createClassifier(Classifier value) {
        return new JAXBElement<Classifier>(_Classifier_QNAME, Classifier.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Task }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "task", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "taskBase")
    public JAXBElement<Task> createTask(Task value) {
        return new JAXBElement<Task>(_Task_QNAME, Task.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link RemoveStopwords }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "removeStopwords", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "processorBase")
    public JAXBElement<RemoveStopwords> createRemoveStopwords(RemoveStopwords value) {
        return new JAXBElement<RemoveStopwords>(_RemoveStopwords_QNAME, RemoveStopwords.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataSetBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "dataSetBase")
    public JAXBElement<DataSetBase> createDataSetBase(DataSetBase value) {
        return new JAXBElement<DataSetBase>(_DataSetBase_QNAME, DataSetBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link SqliteDatabase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "sqliteDatabase", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "databaseBase")
    public JAXBElement<SqliteDatabase> createSqliteDatabase(SqliteDatabase value) {
        return new JAXBElement<SqliteDatabase>(_SqliteDatabase_QNAME, SqliteDatabase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DocType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "docType", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "docTypeBase")
    public JAXBElement<DocType> createDocType(DocType value) {
        return new JAXBElement<DocType>(_DocType_QNAME, DocType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BinaryIntegerTask }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "binaryIntegerTask", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "taskBase")
    public JAXBElement<BinaryIntegerTask> createBinaryIntegerTask(BinaryIntegerTask value) {
        return new JAXBElement<BinaryIntegerTask>(_BinaryIntegerTask_QNAME, BinaryIntegerTask.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DatabaseBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "databaseBase")
    public JAXBElement<DatabaseBase> createDatabaseBase(DatabaseBase value) {
        return new JAXBElement<DatabaseBase>(_DatabaseBase_QNAME, DatabaseBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TaskBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "taskBase")
    public JAXBElement<TaskBase> createTaskBase(TaskBase value) {
        return new JAXBElement<TaskBase>(_TaskBase_QNAME, TaskBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link MultiClassTaskBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "multiClassTaskBase")
    public JAXBElement<MultiClassTaskBase> createMultiClassTaskBase(MultiClassTaskBase value) {
        return new JAXBElement<MultiClassTaskBase>(_MultiClassTaskBase_QNAME, MultiClassTaskBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Database }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "database", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "databaseBase")
    public JAXBElement<Database> createDatabase(Database value) {
        return new JAXBElement<Database>(_Database_QNAME, Database.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ClassifierBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "classifierBase")
    public JAXBElement<ClassifierBase> createClassifierBase(ClassifierBase value) {
        return new JAXBElement<ClassifierBase>(_ClassifierBase_QNAME, ClassifierBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DataSet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "dataSet", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "dataSetBase")
    public JAXBElement<DataSet> createDataSet(DataSet value) {
        return new JAXBElement<DataSet>(_DataSet_QNAME, DataSet.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BinaryTask }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "binaryTask", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "taskBase")
    public JAXBElement<BinaryTask> createBinaryTask(BinaryTask value) {
        return new JAXBElement<BinaryTask>(_BinaryTask_QNAME, BinaryTask.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ProcessorBase }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "processorBase")
    public JAXBElement<ProcessorBase> createProcessorBase(ProcessorBase value) {
        return new JAXBElement<ProcessorBase>(_ProcessorBase_QNAME, ProcessorBase.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FilterByLabel }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "filterByLabel", substitutionHeadNamespace = "urn://uk/ac/ed/inf/ace/config/v1", substitutionHeadName = "processorBase")
    public JAXBElement<FilterByLabel> createFilterByLabel(FilterByLabel value) {
        return new JAXBElement<FilterByLabel>(_FilterByLabel_QNAME, FilterByLabel.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reference }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "processorRef", scope = Programme.PreCacheProcessors.class)
    public JAXBElement<Reference> createProgrammePreCacheProcessorsProcessorRef(Reference value) {
        return new JAXBElement<Reference>(_ProgrammePreCacheProcessorsProcessorRef_QNAME, Reference.class, Programme.PreCacheProcessors.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reference }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "dataSetRef", scope = Programme.DataSets.class)
    public JAXBElement<Reference> createProgrammeDataSetsDataSetRef(Reference value) {
        return new JAXBElement<Reference>(_ProgrammeDataSetsDataSetRef_QNAME, Reference.class, Programme.DataSets.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reference }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "taskRef", scope = Programme.Tasks.class)
    public JAXBElement<Reference> createProgrammeTasksTaskRef(Reference value) {
        return new JAXBElement<Reference>(_ProgrammeTasksTaskRef_QNAME, Reference.class, Programme.Tasks.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reference }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "docTypeRef", scope = Programme.DocTypes.class)
    public JAXBElement<Reference> createProgrammeDocTypesDocTypeRef(Reference value) {
        return new JAXBElement<Reference>(_ProgrammeDocTypesDocTypeRef_QNAME, Reference.class, Programme.DocTypes.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reference }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "classifierRef", scope = Programme.Classifiers.class)
    public JAXBElement<Reference> createProgrammeClassifiersClassifierRef(Reference value) {
        return new JAXBElement<Reference>(_ProgrammeClassifiersClassifierRef_QNAME, Reference.class, Programme.Classifiers.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Reference }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "urn://uk/ac/ed/inf/ace/config/v1", name = "processorRef", scope = Programme.PostCacheProcessors.class)
    public JAXBElement<Reference> createProgrammePostCacheProcessorsProcessorRef(Reference value) {
        return new JAXBElement<Reference>(_ProgrammePreCacheProcessorsProcessorRef_QNAME, Reference.class, Programme.PostCacheProcessors.class, value);
    }

}
